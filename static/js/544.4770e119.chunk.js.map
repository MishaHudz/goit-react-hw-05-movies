{"version":3,"file":"static/js/544.4770e119.chunk.js","mappings":"oKAuBA,IApBA,YAAoD,IAA9BA,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGH,EAAcI,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACxB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKN,EAAU,UAAMI,GAAN,iBAAuBA,IACxCG,MAAON,EAFT,SAIGI,KALID,EASZ,KAGN,C,yGCKD,UAtBA,WACE,OAAwCI,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAJ,CAEA,IAAMG,EAAgB,mCAAG,uGACGC,EAAAA,EAAAA,MADH,gBACfC,EADe,EACfA,QACRJ,EAAgBI,GAFO,2CAAH,qDAKtBF,GAPwB,CAQzB,GAAE,CAACH,KAGF,iCACE,wBAAI,mBACHA,IAAgB,SAAC,IAAD,CAAYV,cAAeU,MAGjD,C,+LCtBDM,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,CACdC,QAAS,CACPC,cACE,+NAIC,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,uGACkBE,EAAAA,EAAAA,GAAM,sBAAuBC,GAD/C,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,0FACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,GAAUL,GAD5C,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,0FACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA6BL,GADpD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,0FACkBN,EAAAA,EAAAA,GAAM,UAAD,OAAWM,EAAX,YAA6BL,GADpD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,0FACkBV,EAAAA,EAAAA,GAAM,uBAAD,OACHU,GACvBT,GAHG,uBACGG,EADH,EACGA,KADH,kBAMEA,GANF,kE","sources":["components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/movies-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction MoviesList({ moviesListArr, moviesPage }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {moviesListArr.map(({ id, original_title }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={`${moviesPage ? `${id}` : `movies/${id}`}`}\n              state={location}\n            >\n              {original_title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default MoviesList;\nMoviesList.propTypes = {\n  moviesListArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  moviesPage: PropTypes.bool,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { getMostPopularFilms } from 'services/movies-api';\n\nfunction HomePage() {\n  const [popularFilms, setpopularFilms] = useState(null);\n\n  useEffect(() => {\n    if (popularFilms) return;\n\n    const getPopularMovies = async () => {\n      const { results } = await getMostPopularFilms();\n      setpopularFilms(results);\n    };\n\n    getPopularMovies();\n  }, [popularFilms]);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {popularFilms && <MoviesList moviesListArr={popularFilms} />}\n    </>\n  );\n}\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTUyYWExMWNlZTIwZWQ3MmNlODBlNTQ3ODk5ZTBiMiIsInN1YiI6IjY0N2UyNDE3Y2NkZTA0MDExOGFhYTZjNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ScOi38rHNRdHf25i9RPscLJw2wEJk6tQ_ks7iMhFAhw',\n  },\n};\n\nexport async function getMostPopularFilms() {\n  const { data } = await axios('/trending/movie/day', options);\n\n  return data;\n}\n\nexport async function getFilmDetailsById(filmId) {\n  const { data } = await axios(`/movie/${filmId}`, options);\n\n  return data;\n}\n\nexport async function getFilmCast(filmId) {\n  const { data } = await axios(`/movie/${filmId}/credits`, options);\n\n  return data;\n}\n\nexport async function getFilmRevirws(filmId) {\n  const { data } = await axios(`/movie/${filmId}/reviews`, options);\n\n  return data;\n}\n\nexport async function getFilmsBySearch(inputedSearchString) {\n  const { data } = await axios(\n    `/search/movie?query=${inputedSearchString}`,\n    options\n  );\n\n  return data;\n}\n"],"names":["moviesListArr","moviesPage","location","useLocation","map","id","original_title","to","state","useState","popularFilms","setpopularFilms","useEffect","getPopularMovies","getMostPopularFilms","results","axios","options","headers","Authorization","data","getFilmDetailsById","filmId","getFilmCast","getFilmRevirws","getFilmsBySearch","inputedSearchString"],"sourceRoot":""}